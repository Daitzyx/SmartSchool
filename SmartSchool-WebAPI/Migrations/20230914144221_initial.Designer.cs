// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartSchool_WebAPI.Data;

#nullable disable

namespace SmartSchool_WebAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230914144221_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("SmartSchool_WebAPI.Models.Matter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TeacherId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Matter");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Matemática",
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Física",
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Português",
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Inglês",
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 5,
                            Name = "Programação",
                            TeacherId = 5
                        });
                });

            modelBuilder.Entity("SmartSchool_WebAPI.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Student");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LastName = "Kent",
                            Name = "Marta",
                            Phone = "33225555"
                        },
                        new
                        {
                            Id = 2,
                            LastName = "Isabela",
                            Name = "Paula",
                            Phone = "3354288"
                        },
                        new
                        {
                            Id = 3,
                            LastName = "Antonia",
                            Name = "Laura",
                            Phone = "55668899"
                        },
                        new
                        {
                            Id = 4,
                            LastName = "Maria",
                            Name = "Luiza",
                            Phone = "6565659"
                        },
                        new
                        {
                            Id = 5,
                            LastName = "Machado",
                            Name = "Lucas",
                            Phone = "565685415"
                        },
                        new
                        {
                            Id = 6,
                            LastName = "Alvares",
                            Name = "Pedro",
                            Phone = "456454545"
                        },
                        new
                        {
                            Id = 7,
                            LastName = "José",
                            Name = "Paulo",
                            Phone = "9874512"
                        });
                });

            modelBuilder.Entity("SmartSchool_WebAPI.Models.StudentMatter", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MatterId")
                        .HasColumnType("INTEGER");

                    b.HasKey("StudentId", "MatterId");

                    b.HasIndex("MatterId");

                    b.ToTable("StudentMatters");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            MatterId = 2
                        },
                        new
                        {
                            StudentId = 1,
                            MatterId = 4
                        },
                        new
                        {
                            StudentId = 1,
                            MatterId = 5
                        },
                        new
                        {
                            StudentId = 2,
                            MatterId = 1
                        },
                        new
                        {
                            StudentId = 2,
                            MatterId = 2
                        },
                        new
                        {
                            StudentId = 2,
                            MatterId = 5
                        },
                        new
                        {
                            StudentId = 3,
                            MatterId = 1
                        },
                        new
                        {
                            StudentId = 3,
                            MatterId = 2
                        },
                        new
                        {
                            StudentId = 3,
                            MatterId = 3
                        },
                        new
                        {
                            StudentId = 4,
                            MatterId = 1
                        },
                        new
                        {
                            StudentId = 4,
                            MatterId = 4
                        },
                        new
                        {
                            StudentId = 4,
                            MatterId = 5
                        },
                        new
                        {
                            StudentId = 5,
                            MatterId = 4
                        },
                        new
                        {
                            StudentId = 5,
                            MatterId = 5
                        },
                        new
                        {
                            StudentId = 6,
                            MatterId = 1
                        },
                        new
                        {
                            StudentId = 6,
                            MatterId = 2
                        },
                        new
                        {
                            StudentId = 6,
                            MatterId = 3
                        },
                        new
                        {
                            StudentId = 6,
                            MatterId = 4
                        },
                        new
                        {
                            StudentId = 7,
                            MatterId = 1
                        },
                        new
                        {
                            StudentId = 7,
                            MatterId = 2
                        },
                        new
                        {
                            StudentId = 7,
                            MatterId = 3
                        },
                        new
                        {
                            StudentId = 7,
                            MatterId = 4
                        },
                        new
                        {
                            StudentId = 7,
                            MatterId = 5
                        });
                });

            modelBuilder.Entity("SmartSchool_WebAPI.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Lauro"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Roberto"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ronaldo"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Rodrigo"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Alexandre"
                        });
                });

            modelBuilder.Entity("SmartSchool_WebAPI.Models.Matter", b =>
                {
                    b.HasOne("SmartSchool_WebAPI.Models.Teacher", "Teacher")
                        .WithMany("Matters")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SmartSchool_WebAPI.Models.StudentMatter", b =>
                {
                    b.HasOne("SmartSchool_WebAPI.Models.Matter", "Matter")
                        .WithMany("StudentMatters")
                        .HasForeignKey("MatterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool_WebAPI.Models.Student", "Student")
                        .WithMany("StudentMatters")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Matter");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SmartSchool_WebAPI.Models.Matter", b =>
                {
                    b.Navigation("StudentMatters");
                });

            modelBuilder.Entity("SmartSchool_WebAPI.Models.Student", b =>
                {
                    b.Navigation("StudentMatters");
                });

            modelBuilder.Entity("SmartSchool_WebAPI.Models.Teacher", b =>
                {
                    b.Navigation("Matters");
                });
#pragma warning restore 612, 618
        }
    }
}
